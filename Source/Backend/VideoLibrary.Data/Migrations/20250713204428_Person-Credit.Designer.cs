// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoLibrary.Data;

#nullable disable

namespace VideoLibrary.Data.Migrations
{
    [DbContext(typeof(VideoLibraryContext))]
    [Migration("20250713204428_Person-Credit")]
    partial class PersonCredit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VideoLibrary.Data.DbModels.Artwork", b =>
                {
                    b.Property<int>("ArtworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtworkId"));

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Thumbnail")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ArtworkId");

                    b.HasIndex("MovieId");

                    b.ToTable("Artwork");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.Credit", b =>
                {
                    b.Property<int>("CreditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditId"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CreditId");

                    b.HasIndex("MovieId");

                    b.HasIndex("PersonId");

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.LookupGenre", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("TheTvDbId")
                        .HasColumnType("int");

                    b.Property<int?>("TmDbId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LookupGenres", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            Name = "Action",
                            TheTvDbId = 19,
                            TmDbId = 28
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            Name = "Adventure",
                            TheTvDbId = 18,
                            TmDbId = 12
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            Name = "Animation",
                            TheTvDbId = 17,
                            TmDbId = 16
                        },
                        new
                        {
                            Id = 4,
                            Deleted = false,
                            Name = "Science Fiction",
                            TheTvDbId = 2,
                            TmDbId = 878
                        },
                        new
                        {
                            Id = 5,
                            Deleted = false,
                            Name = "Horror",
                            TheTvDbId = 6,
                            TmDbId = 27
                        },
                        new
                        {
                            Id = 6,
                            Deleted = false,
                            Name = "Thriller",
                            TheTvDbId = 24,
                            TmDbId = 53
                        },
                        new
                        {
                            Id = 7,
                            Deleted = false,
                            Name = "Crime",
                            TheTvDbId = 14,
                            TmDbId = 80
                        },
                        new
                        {
                            Id = 8,
                            Deleted = false,
                            Name = "Fantasy",
                            TheTvDbId = 10,
                            TmDbId = 14
                        },
                        new
                        {
                            Id = 9,
                            Deleted = false,
                            Name = "Family",
                            TheTvDbId = 11,
                            TmDbId = 10751
                        },
                        new
                        {
                            Id = 10,
                            Deleted = false,
                            Name = "Comedy",
                            TheTvDbId = 15,
                            TmDbId = 35
                        },
                        new
                        {
                            Id = 11,
                            Deleted = false,
                            Name = "Documentary",
                            TheTvDbId = 13,
                            TmDbId = 99
                        },
                        new
                        {
                            Id = 12,
                            Deleted = false,
                            Name = "Sport",
                            TheTvDbId = 21
                        },
                        new
                        {
                            Id = 13,
                            Deleted = false,
                            Name = "Western",
                            TheTvDbId = 26,
                            TmDbId = 37
                        },
                        new
                        {
                            Id = 14,
                            Deleted = false,
                            Name = "Romance",
                            TheTvDbId = 28,
                            TmDbId = 10749
                        },
                        new
                        {
                            Id = 15,
                            Deleted = false,
                            Name = "Mystery",
                            TheTvDbId = 31,
                            TmDbId = 9648
                        },
                        new
                        {
                            Id = 16,
                            Deleted = false,
                            Name = "Musical",
                            TheTvDbId = 29,
                            TmDbId = 10402
                        },
                        new
                        {
                            Id = 17,
                            Deleted = false,
                            Name = "History",
                            TheTvDbId = 33,
                            TmDbId = 36
                        },
                        new
                        {
                            Id = 18,
                            Deleted = false,
                            Name = "War",
                            TheTvDbId = 34,
                            TmDbId = 10752
                        },
                        new
                        {
                            Id = 19,
                            Deleted = false,
                            Name = "Anime",
                            TheTvDbId = 27,
                            TmDbId = 16
                        },
                        new
                        {
                            Id = 20,
                            Deleted = false,
                            Name = "Martial Arts",
                            TheTvDbId = 35
                        });
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.LookupRating", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("TheTvDbId")
                        .HasColumnType("int");

                    b.Property<string>("TmDbId")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("LookupRatings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            Description = "Suitable for all ages",
                            Name = "G",
                            Order = 1,
                            TheTvDbId = 288,
                            TmDbId = "G"
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            Description = "Parental guidance advised",
                            Name = "PG",
                            Order = 2,
                            TheTvDbId = 289,
                            TmDbId = "PG"
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            Description = "Parental guidance advised for viewers 14 or younger",
                            Name = "14A",
                            Order = 3,
                            TheTvDbId = 290,
                            TmDbId = "14A"
                        },
                        new
                        {
                            Id = 4,
                            Deleted = false,
                            Description = "Parental guidance advised for viewers 18 or younger",
                            Name = "18A",
                            Order = 4,
                            TheTvDbId = 291,
                            TmDbId = "18A"
                        },
                        new
                        {
                            Id = 5,
                            Deleted = false,
                            Description = "Restricted to viewers 18 years and over",
                            Name = "R",
                            Order = 5,
                            TheTvDbId = 292,
                            TmDbId = "R"
                        },
                        new
                        {
                            Id = 6,
                            Deleted = false,
                            Description = "Restricted to viewers 18 years and over, sexually explicit content",
                            Name = "A",
                            Order = 6,
                            TheTvDbId = 293,
                            TmDbId = "A"
                        },
                        new
                        {
                            Id = 7,
                            Deleted = false,
                            Description = "Exempt. Contains material not subject to classification such as documentaries, nature, travel, music, arts and culture, sports and educational and instructional information",
                            Name = "E",
                            Order = 7,
                            TheTvDbId = 294,
                            TmDbId = "E"
                        },
                        new
                        {
                            Id = 8,
                            Deleted = false,
                            Description = "No rating information",
                            Name = "NR",
                            Order = 8,
                            TmDbId = "NR"
                        });
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.Property<int>("Runtime")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.HasIndex("RatingId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.MovieGenre", b =>
                {
                    b.Property<int>("MovieGenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieGenreId"));

                    b.Property<int>("LookupGenreId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("MovieGenreId");

                    b.HasIndex("LookupGenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieGenres");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Profile")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.HasKey("PersonId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.Artwork", b =>
                {
                    b.HasOne("VideoLibrary.Data.DbModels.Movie", "Movie")
                        .WithMany("Artwork")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.Credit", b =>
                {
                    b.HasOne("VideoLibrary.Data.DbModels.Movie", "Movie")
                        .WithMany("Credits")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoLibrary.Data.DbModels.Person", "Person")
                        .WithMany("Credits")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.Movie", b =>
                {
                    b.HasOne("VideoLibrary.Data.DbModels.LookupRating", "Rating")
                        .WithMany("Movies")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.MovieGenre", b =>
                {
                    b.HasOne("VideoLibrary.Data.DbModels.LookupGenre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("LookupGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoLibrary.Data.DbModels.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.LookupGenre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.LookupRating", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.Movie", b =>
                {
                    b.Navigation("Artwork");

                    b.Navigation("Credits");

                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("VideoLibrary.Data.DbModels.Person", b =>
                {
                    b.Navigation("Credits");
                });
#pragma warning restore 612, 618
        }
    }
}
